// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Report {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String
}

enum PostType {
  ANNOTATION
  URGENCY
  PENDENCY
}

model Area {
  id        Int      @id @default(autoincrement())
  name      String
  posts     Post[]
  indicators Indicator[]
  indicatorValues IndicatorValue[]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      String
  avatar    String?
  posts     Post[]
  replies   Reply[]
  auditLogs AuditLog[]
}

model Post {
  id        Int       @id @default(autoincrement())
  area      Area      @relation(fields: [areaId], references: [id])
  areaId    Int
  date      DateTime
  shift     Int
  type      PostType
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  attachments Attachment[]
  replies    Reply[]
}

model Reply {
  id        Int       @id @default(autoincrement())
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  content   String
  createdAt DateTime  @default(now())
  attachments Attachment[]
}

model Attachment {
  id        Int      @id @default(autoincrement())
  post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
  reply     Reply?   @relation(fields: [replyId], references: [id])
  replyId   Int?
  filename  String
  mimeType  String
  size      Int
  url       String
  data      Bytes?
}

model Indicator {
  id        Int      @id @default(autoincrement())
  area      Area     @relation(fields: [areaId], references: [id])
  areaId    Int
  code      String
  name      String
  unit      String
  target    Float?
  values    IndicatorValue[]
}

model IndicatorValue {
  id          Int       @id @default(autoincrement())
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  indicatorId Int
  area        Area      @relation(fields: [areaId], references: [id])
  areaId      Int
  date        DateTime
  shift       Int
  value       Float
  source      String
}

model AuditLog {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  action     String
  targetType String
  targetId   Int?
  createdAt  DateTime @default(now())
}
